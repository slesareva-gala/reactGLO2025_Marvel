{"version":3,"file":"static/js/287.ba5eda55.chunk.js","mappings":"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","sources":["utils/setContent.js","components/errorMessage/ErrorMessage.js","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import Spinner from \"../components/spinner/Spinner\"\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\n\r\nconst setContent = (processing, Component, data) => {\r\n\r\n    switch (processing.replace(/\\d/g, '')) {\r\n        case 'waiting':\r\n            return <Spinner />\r\n        case 'loading':\r\n            return <Spinner />\r\n        case 'confirmed':\r\n            return <Component data={data} />\r\n        case 'error':\r\n            return <ErrorMessage />\r\n        default:\r\n            throw new Error('Unexpected process state')\r\n    }\r\n}\r\n\r\nexport default setContent","import styled from 'styled-components';\r\nimport imgError from \"./error.gif\"\r\n\r\nconst ErrorImg = styled.img`\r\n  display: block;\r\n  width: 250px;\r\n  height: 250px;\r\n  object-fit: contain;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <ErrorImg src={imgError} alt=\"error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useMarvelService } from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n    const [comics, setComics] = useState([]);\r\n    const [offset, setOffset] = useState(0);\r\n\r\n    const { processing, setProcessing, getAllComics, comicsMarvel } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest();\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [])\r\n\r\n    const onRequest = () => {\r\n\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComics) => {\r\n        setComics(comics => [...comics,\r\n        ...newComics.filter(obj1 => comics.findIndex(obj2 => (obj2.id === obj1.id)) < 0)])\r\n        setOffset(offset + 8)\r\n\r\n        setProcessing('confirmed')\r\n    }\r\n\r\n    const viewList = (comics) => {\r\n        const cardsComics = comics.map(comic => {\r\n            const { id, title, thumbnail, price } = comic\r\n\r\n            return (\r\n                <li className=\"comics__item\" key={id}>\r\n                    <Link to={`/reactGLO2025_Marvel/comics/${id}`}>\r\n                        <img src={thumbnail} alt={title} className=\"comics__item-img\" />\r\n                        <div className=\"comics__item-name\">{title}</div>\r\n                        <div className=\"comics__item-price\">{price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {cardsComics}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const setContentCust = (processing) => {\r\n\r\n        switch (processing) {\r\n            case 'confirmed':\r\n                return null\r\n            case 'error429':\r\n                return (<span className=\"char__error_message\">You have exceeded your rate limit.  Please try again later.</span>)\r\n            default:\r\n                return setContent(processing)\r\n        }\r\n    }\r\n\r\n    const classButton = `button ${processing === 'loading' ? 'button__secondary' : 'button__main'} button__long`\r\n    const styleButton = processing === 'loading' ? { width: 'unset' } : {}\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {viewList(comics)}\r\n            {setContentCust(processing)}\r\n            {(processing === 'error429' || processing === 'loading' || offset > comicsMarvel - 1) ? null : (\r\n                <button\r\n                    className={classButton}\r\n                    onClick={onRequest}\r\n                    style={styleButton}\r\n                >\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport CommicList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of Marvel comics\"\r\n                />\r\n                <title>Marvel Comics</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <CommicList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage","import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n    const [processing, setProcessing] = useState('waiting')\r\n\r\n    const request = useCallback(\r\n        async (url,\r\n            method = 'GET',\r\n            body = null,\r\n            headers = {\r\n                'Content-Type': 'application/json',\r\n                'Accept-Language': 'en-US, en;q=0.9'\r\n            }) => {\r\n\r\n            setProcessing('loading')\r\n\r\n            try {\r\n                const response = await fetch(url, { method, body, headers })\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n                }\r\n\r\n                const data = await response.json()\r\n\r\n                //setProcessing('confirmed') -  устанавливаем \"вручную\" после обработки data в цепочке обработки then\r\n\r\n                return data\r\n\r\n            } catch (e) {\r\n                const codeError = e.message.includes('status:') ? e.message.match(/(?<=status:\\s*)\\d{3}/g)[0] : '000'\r\n\r\n                setProcessing('error' + codeError)\r\n\r\n                throw new Error(e);\r\n            }\r\n        }, [])\r\n\r\n    return { request, processing, setProcessing }\r\n}\r\n","import { useHttp } from '../hooks/http.hook'\r\n\r\nimport imgNotFound from \"../resources/img/image_not_found.webp\"\r\nimport imgNotAvailbale from \"../resources/img/image_not_available.webp\"\r\n\r\nexport const useMarvelService = () => {\r\n    const { request, processing, setProcessing } = useHttp()\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    const _apiKey = `apikey=${process.env.REACT_APP_MARVEL_API_KEY}`\r\n\r\n    const charsMarvel = 1564 // на 16.02.2025\r\n    const offsetCharsBeginMarvel = 196\r\n    const comicsMarvel = 1000 // ???\r\n\r\n    const getAllCharacters = async (offset = offsetCharsBeginMarvel, limit = 9) => {\r\n        if (offset > charsMarvel - 1) return []\r\n\r\n        try {\r\n            const res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`)\r\n            return res.data.results.map(_transformCharacter)\r\n        } catch (e) {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const getRandomCharacters = async (limit) => {\r\n        const randomOffset = Math.floor(Math.random() * (charsMarvel - 10 - offsetCharsBeginMarvel) + offsetCharsBeginMarvel)\r\n\r\n        try {\r\n            const res = await getAllCharacters(randomOffset, limit)\r\n            return res\r\n        } catch (e) {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        try {\r\n            const res = await request(`${_apiBase}characters/${id}?${_apiKey} `)\r\n            return res ? _transformCharacter(res.data.results[0]) : null\r\n        } catch (e) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        try {\r\n            const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n            return res.data.results.map(_transformCharacter);\r\n        } catch (e) {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const getAllComics = async (offset = 0, limit = 8) => {\r\n        try {\r\n            const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=${limit}&offset=${offset}&${_apiKey}`)\r\n            return res.data.results.map(_transformComics)\r\n        } catch (e) {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        try {\r\n            const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n            return res ? _transformComics(res.data.results[0]) : []\r\n        } catch (e) {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        const { id, name, description, thumbnail, urls } = char\r\n\r\n        const srcThumbnail = thumbnail.path.includes('image_not_available') ? imgNotFound\r\n            : thumbnail.path.includes('4c002e0305708') ? imgNotAvailbale\r\n                : `${thumbnail.path}.${thumbnail.extension}`\r\n\r\n        return {\r\n            id,\r\n            name,\r\n            description: description,\r\n            thumbnail: srcThumbnail,\r\n            homepage: urls[0].url,\r\n            wiki: urls[1].url,\r\n            comics: char.comics.items,\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        const { id, title, description, pageCount, thumbnail, prices } = comics\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            description: description || \"The description is missing\",\r\n            pageCount: pageCount\r\n                ? `${pageCount} p.`\r\n                : \"No information about the number of pages\",\r\n            thumbnail: `${thumbnail.path}.${thumbnail.extension}`,\r\n            language: comics.textObjects[0]?.language || \"en-us\",\r\n            price: prices[0].price\r\n                ? `${prices[0].price} $`\r\n                : \"not available\",\r\n        }\r\n    }\r\n\r\n    return {\r\n        charsMarvel, comicsMarvel, offsetCharsBeginMarvel,\r\n        processing, setProcessing,\r\n        getCharacter, getCharacterByName, getAllCharacters, getRandomCharacters,\r\n        getAllComics, getComic\r\n    }\r\n}\r\n"],"names":["setContent","processing","Component","data","replace","_jsx","Spinner","ErrorMessage","Error","ErrorImg","styled","img","src","imgError","alt","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","comics","setComics","useState","offset","setOffset","setProcessing","getAllComics","comicsMarvel","useMarvelService","useEffect","onRequest","then","onComicsListLoaded","newComics","filter","obj1","findIndex","obj2","id","classButton","styleButton","width","cardsComics","map","comic","title","thumbnail","price","Link","to","viewList","setContentCust","onClick","style","ComicsPage","_Fragment","Helmet","name","content","CommicList","request","useHttp","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","status","json","e","codeError","message","includes","match","_apiBase","_apiKey","charsMarvel","offsetCharsBeginMarvel","getAllCharacters","limit","results","_transformCharacter","char","description","urls","path","imgNotFound","imgNotAvailbale","extension","homepage","wiki","items","_transformComics","_comics$textObjects$","pageCount","prices","language","textObjects","getCharacter","res","getCharacterByName","getRandomCharacters","randomOffset","Math","floor","random","getComic"],"sourceRoot":""}